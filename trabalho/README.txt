=====================================================================
    JOGO: CA√áADORES DE DIAMANTES - VERS√ÉO JAVA (TEXTO)
=====================================================================

Desenvolvido por: Milena Alessandra Bernardi
Disciplina: Programa√ß√£o Orientada a Objetos I (POOI)
Professora: Inali Wisniewski Soares
Data de entrega: 16/06/2025

---------------------------------------------------------------------
üîç DESCRI√á√ÉO DO JOGO
---------------------------------------------------------------------

"Ca√ßadores de Diamantes" √© um jogo de aventura em interface textual
no qual os jogadores se movimentam por uma mina em busca de diamantes.
Ao longo do caminho, eles enfrentam armadilhas, descobrem pistas e
tentam acumular a maior pontua√ß√£o poss√≠vel antes do fim das rodadas.

O jogo foi adaptado da vers√£o original em C++ para Java, aplicando
os principais conceitos de Programa√ß√£o Orientada a Objetos.

---------------------------------------------------------------------
‚öôÔ∏è COMO EXECUTAR
---------------------------------------------------------------------

1. Compile todos os arquivos `.java`:
   Exemplo usando terminal:
     > javac jogo/**/*.java

2. Execute a classe principal:
     > java jogo.core.Jogo

3. Siga o menu textual para iniciar o jogo.

Requisitos:
- JDK 17 ou superior
- Terminal que suporte ANSI escape codes para cores (opcional)

---------------------------------------------------------------------
üí° CONCEITOS DE POO APLICADOS
---------------------------------------------------------------------

‚úÖ Encapsulamento:
   - Atributos privados com acesso controlado por m√©todos `get/set`.

‚úÖ Heran√ßa:
   - `ElementoMina` como classe abstrata, com subclasses para cada tipo
     de elemento da mina.

‚úÖ Interface:
   - `ElementoAcao` define comportamento polim√≥rfico dos elementos.

‚úÖ Classe Abstrata:
   - `ElementoMina` define a base comum para elementos interativos da mina.

‚úÖ Polimorfismo:
   - A√ß√µes diferentes ao chamar `executar()` em inst√¢ncias de `ElementoMina`.

‚úÖ Composi√ß√£o:
   - O `Tabuleiro` comp√µe os elementos da mina e diamantes.

‚úÖ Exce√ß√µes personalizadas:
   - `MovimentoInvalidoException`
   - `JogadorDesqualificadoException` (em implementa√ß√£o ou uso adicional)

‚úÖ Estrutura de dados:
   - Uso de `ArrayList<Jogador>`, `List<ElementoMina>`, etc.

‚úÖ Arquivos:
   - (Em implementa√ß√£o) Grava√ß√£o e leitura de pontua√ß√£o e rankings.

‚úÖ JavaDoc:
   - Todas as classes possuem documenta√ß√£o com as tags:
     `@author`, `@version`, `@param`, `@return`, `@exception`

---------------------------------------------------------------------
‚ú® FUNCIONALIDADE EXTRA
---------------------------------------------------------------------

‚ñ∂ TELEPORTE INTELIGENTE:
   - Quando o jogador encontra um teleporte, ele √© enviado para uma
     posi√ß√£o aleat√≥ria **livre** na mina.

Justificativa:
   - Torna a jogabilidade mais estrat√©gica e menos repetitiva.

Passos de implementa√ß√£o:
   - Criada a classe `ElementoTeleporte` herdando de `ElementoMina`.
   - Implementado m√©todo `executar()` que escolhe nova posi√ß√£o.
   - Atualiza coordenadas do jogador e exibe mensagem animada no console.

---------------------------------------------------------------------
üìÅ ORGANIZA√á√ÉO DOS PACOTES
---------------------------------------------------------------------

- `jogo.core`    ‚Üí Fluxo principal do jogo, menu, motor
- `jogo.modelo`  ‚Üí Modelo de dados (Jogador, Tabuleiro, Elementos)
- `jogo.util`    ‚Üí Utilit√°rios (cores ANSI, helpers)
- `jogo.modelo.excecoes` ‚Üí Exce√ß√µes personalizadas

---------------------------------------------------------------------
üìù OBSERVA√á√ïES FINAIS
---------------------------------------------------------------------

Este projeto foi desenvolvido com foco did√°tico, priorizando clareza
na aplica√ß√£o dos conceitos de POO e na intera√ß√£o textual com o usu√°rio.

N√£o foi utilizado nenhum recurso gr√°fico externo (como Swing ou JavaFX),
seguindo as diretrizes da disciplina.

Obrigado por jogar! üíéüí•
